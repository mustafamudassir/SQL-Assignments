CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    Phone VARCHAR(20),
    Address VARCHAR(255)
);

CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    Description TEXT,
    Price DECIMAL(10, 2)
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    TotalAmount DECIMAL(10, 2),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

CREATE TABLE OrderDetails (
    OrderDetailID INT PRIMARY KEY,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

CREATE TABLE Inventory (
    InventoryID INT PRIMARY KEY,
    ProductID INT,
    QuantityInStock INT,
    LastStockUpdate INT,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)

);

INSERT INTO CUSTOMERS VALUES
(1,'John','Doe','john.doe@example.com','9487611963','Nagercoil'),
(2,'Jane','Smith','jane.smith@example.com','9357611963','Nagercoil'),
(3,'Alex','Johnson','alex.johnson@example.com','9467676963','Coimbatore'),
(4,'Emily','Miller','emily.miller@example.com','9656231923','Chennai'),
(5,'Michael','Jones','michael.jones@example.com','9442401963','Bangalore'),
(6,'Sara','Taylor','sara.taylor@example.com','9487111363','Nagercoil'),
(7,'David','Brown','david.brown@example.com','9837206157','Chennai'),
(8,'Jessica','Clark','jessica.clark@example.com','9936792547','Coimbatore'),
(9,'Brian','Robinson','brian.robinson@example.com','9531890546','Chennai'),
(10,'Rachel','Williams','rachel.williams@example.com','9568925690','Nagercoil');

INSERT INTO Products VALUES(1,'XBOX','Electronic',100000),(2,'REFRIGERATOR','Electronic',20000),(3,'HP LAPTOP','Electronic',200000),(4,'AIRPODS','Electronic',5000),(5,'PEN','Instruments',100),(6,'ROLLING CHAIR','Furniture',2000),(7,'SILVER RING','Ornaments',1000),(8,'TV',' Electronic',100000),(9,'WATCH',' Electronic',2000),(10,'JOYSTICK CONTROLLER',' Electronic',5000)

INSERT INTO ORDERS VALUES(1,3,'2023-11-28',50000),(2,7,'2023-12-04',20000),(3,5,'2022-07-05',100000),(4,3,'2022-12-07',10000),(5,5,'2021-01-07',200000),(6,2,'2023-04-06',4000),(7,1,'2022-11-28',1000),(8,10,'2022-01-01',300000),(9,6,'2021-06-03',2000),(10,9,'2021-01-09',6000),(11,4,'2023-02-09',500),(12,8,'2021-08-05',10000)

INSERT INTO ORDERDETAILS VALUES(1,5,3,4),(2,3,7,3),(3,10,5,1),(4,4,3,6),(5,8,5,2),(6,1,2,2),(7,1,3,1),(8,2,9,8),(9,6,2,1),(10,9,5,4)

INSERT INTO Inventory VALUES(1,4,3,5),(2,7,3,3),(3,9,2,3),(4,2,3,10),(5,8,1,12),(6,7,8,10),(7,6,3,1),(8,2,8,9),(9,6,1,2),(10,9,4,5)

--Write an SQL query to retrieve the names and emails of all customers

SELECT FIRSTNAME,LASTNAME,EMAIL FROM Customers

--Write an SQL query to list all orders with their order dates and corresponding customer names.


SELECT
Orders.OrderID,
Orders.OrderDate,
Customers.FirstName,
Customers.LastName
FROM Orders
JOIN Customers ON Orders.CustomerID = Customers.CustomerID;



--Write an SQL query to insert a new customer record into the "Customers" table. Include customer information such as name, email, and address.

INSERT INTO CUSTOMERS VALUES(11,'JACOB','K','jacob@gmail.com','9241617263','Nagercoil')

--. Write an SQL query to update the prices of all electronic gadgets in the "Products" table by increasing them by 10%.

UPDATE Products SET Price = Price + Price * 0.10 WHERE Description LIKE '%Electronic%';



--. Write an SQL query to delete a specific order and its associated order details from the "Orders" and "OrderDetails" tables. Allow users to input the order ID as a parameter.

DECLARE @CustInput INT
SET @CustInput=5
DELETE FROM Orders WHERE OrderID=@CustInput
DELETE FROM OrderDetails WHERE OrderID=@CustInput


--. Write an SQL query to insert a new order into the "Orders" table. Include the customer ID, order date, and any other necessary information.

INSERT INTO ORDERS VALUES(5,5,'2021-01-07',200000)

--. Write an SQL query to update the contact information (e.g., email and address) of a specific customer in the "Customers" table. Allow users to input the customer ID and new contact information.

DECLARE @CustID INT,@CustMail VARCHAR(50),@CustAddress VARCHAR(50)
SET @CustID=1
SET @CustMail='mustafa@gmail.com'
SET @CustAddress='Chennai'
UPDATE Customers SET Email=@CustMail,Address=@CustAddress WHERE CustomerID=@CustID


-- Write an SQL query to insert a new electronic gadget product into the "Products" table, including product name, category, price, and any other relevant details.

INSERT INTO PRODUCTS VALUES(11,'OVEN','Electronic',25000)

-- Write an SQL query to find the total number of products available for sale.

SELECT COUNT(*) AS ProductName FROM Products;

-- Write an SQL query to calculate the total revenue generated by TechShop. 

SELECT SUM(TotalAmount) AS TotalRevenue FROM Orders;

-- Write an SQL query to calculate the average order value (total revenue divided by the number of orders) for all customers.

SELECT AVG(TotalAmount) AS AvgOrderValue FROM Orders;

-- Aggregate Functions

--1.Write an SQL query to find out which customers have not placed any orders.


SELECT Customers.CustomerID, Customers.FirstName, Customers.LastName
FROM Customers
LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID
WHERE Orders.CustomerID IS NULL;

);
--Write an SQL query to find the total number of products available for sale.

SELECT COUNT(PRODUCTID) AS NUMBEROFPRODUCTS FROM Products


--Write an SQL query to calculate the total revenue generated by TechShop.

SELECT SUM(TOTALAMOUNT) AS TOTAL_REVENUE FROM ORDERS

--Write an SQL query to find the customers who have placed the most orders. List their names and the number of orders they've placed.

SELECT TOP 1 FIRSTNAME,LASTNAME,COUNT(*) AS ORDERCOUNT
FROM Customers
JOIN ORDERS
ON Customers.CustomerID=Orders.CustomerID
GROUP BY Customers.FirstNAme,Customers.LastName,Customers.CustomerID
ORDER BY ORDERCOUNT DESC

-- Write an SQL query to find the total number of orders placed by each customer and list their names along with the order count

SELECT FIRSTNAME,LASTNAME,COUNT(*) AS TOTAL_COUNT
FROM Customers
JOIN Orders
ON Customers.CustomerID=Orders.CustomerID
GROUP BY FIRSTNAME,LastName



-- 1. Write an SQL query to retrieve a list of all orders along with customer information (e.g., customer name) for each order.
SELECT
    Orders.OrderID,
    Customers.FirstName,
    Customers.LastName,
    Customers.Email,
    Customers.Phone,
    Orders.OrderDate,
    Orders.TotalAmount
FROM
    Orders
JOIN
    Customers ON Orders.CustomerID = Customers.CustomerID;

--2. Write an SQL query to find the total revenue generated by each electronic gadget product. Include the product name and the total revenue.



--3. Write an SQL query to list all customers who have made at least one purchase. Include their names and contact information.

SELECT
    Customers.FirstName,
    Customers.LastName,
    Customers.Email,
    Customers.Phone
FROM
    Customers
JOIN
    Orders ON Customers.CustomerID = Orders.CustomerID;


	--6. Write an SQL query to calculate the average order value for each customer. Include the customer's name and their average order value.

SELECT
    Customers.FirstName,
    Customers.LastName,
    AVG(Orders.TotalAmount) AS AverageOrderValue
FROM
    Customers
JOIN
    Orders ON Customers.CustomerID = Orders.CustomerID
GROUP BY
    Customers.FirstName,
    Customers.LastName;




